{%- style -%}
  .collection-filters {
    padding: 20px;
    background: var(--white);
    border-radius: 8px;
  }

  .filter-group {
    margin-bottom: 30px;
  }

  .filter-group h3 {
    font-family: 'Forta', sans-serif;
    color: var(--primary-color);
    margin-bottom: 15px;
  }

  .filter-option {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
  }

  .filter-option input[type="checkbox"] {
    width: 18px;
    height: 18px;
    border: 2px solid var(--primary-color);
    border-radius: 4px;
  }

  .collection-header {
    margin-bottom: 40px;
    text-align: left;
  }

  .collection-header h1 {
    font-family: 'Forta', sans-serif;
    color: var(--primary-color);
    margin-bottom: 10px;
  }

  .collection-description {
    color: #666;
  }

  .collection-toolbar {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin-bottom: 30px;
  }

  .sort-by {
    padding: 8px 16px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background: var(--white);
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 30px;
  }

  .product-card {
    background: var(--white);
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .product-card:hover {
    transform: translateY(-5px);
  }

  .product-card__image {
    position: relative;
    padding-bottom: 100%;
    background: #f5f5f5;
  }

  .product-card__image img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-card__info {
    padding: 20px;
  }

  .product-card__title {
    font-family: 'Forta', sans-serif;
    color: var(--primary-color);
    margin-bottom: 8px;
  }

  .product-card__description {
    color: #666;
    font-size: 0.9em;
    margin-bottom: 15px;
  }

  .product-card__price {
    color: var(--primary-color);
    font-weight: 600;
    margin-bottom: 15px;
  }

  .add-to-cart {
    width: 100%;
    padding: 10px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .add-to-cart:hover {
    background-color: #1e3d2d;
  }

  @media screen and (max-width: 990px) {
    .products-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 768px) {
    .products-grid {
      grid-template-columns: 1fr;
    }
  }
{%- endstyle -%}

<div class="shop-page">
  <div class="collection-header">
    <h1>{{ collection.title }}</h1>
    <p class="collection-description">{{ collection.description }}</p>
  </div>

  <div class="page-width">
    <div style="display: grid; grid-template-columns: 250px 1fr; gap: 30px;">
      <div class="collection-filters">
        <div class="filter-group">
          <h3>Product Type</h3>
          <div class="filter-option">
            <input type="checkbox" id="buff-wipes">
            <label for="buff-wipes">Buff Wipes</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="soap-bars">
            <label for="soap-bars">Soap Bars</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="accessories">
            <label for="accessories">Accessories</label>
          </div>
        </div>

        <div class="filter-group">
          <h3>Price Range</h3>
          <div class="filter-option">
            <input type="checkbox" id="under-20">
            <label for="under-20">Under $20</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="20-50">
            <label for="20-50">$20 - $50</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="over-50">
            <label for="over-50">Over $50</label>
          </div>
        </div>

        <div class="filter-group">
          <h3>Scent</h3>
          <div class="filter-option">
            <input type="checkbox" id="unscented">
            <label for="unscented">Unscented</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="lavender">
            <label for="lavender">Lavender</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="eucalyptus">
            <label for="eucalyptus">Eucalyptus</label>
          </div>
          <div class="filter-option">
            <input type="checkbox" id="citrus">
            <label for="citrus">Citrus</label>
          </div>
        </div>

        <button class="add-to-cart" style="margin-top: 20px;">Reset Filters</button>
      </div>

      <div>
        <div class="collection-toolbar">
          <select class="sort-by">
            <option value="featured">Featured</option>
            <option value="price-ascending">Price: Low to High</option>
            <option value="price-descending">Price: High to Low</option>
            <option value="title-ascending">A-Z</option>
            <option value="title-descending">Z-A</option>
            <option value="created-ascending">Oldest to Newest</option>
            <option value="created-descending">Newest to Oldest</option>
          </select>
        </div>

        <div class="products-grid">
          {%- for product in collection.products -%}
            <div class="product-card">
              <div class="product-card__image">
                <img
                  src="{{ product.featured_image | img_url: '500x500', crop: 'center' }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  loading="lazy"
                >
              </div>
              <div class="product-card__info">
                <h2 class="product-card__title">{{ product.title }}</h2>
                <p class="product-card__description">{{ product.description | strip_html | truncatewords: 15 }}</p>
                <div class="product-card__price">
                  {%- if product.price_varies -%}
                    From {{ product.price_min | money }}
                  {%- else -%}
                    {{ product.price | money }}
                  {%- endif -%}
                </div>
                <button class="add-to-cart" 
                  type="button"
                  {% if product.available %}
                    onclick="addToCart('{{ product.variants.first.id }}', 1)"
                  {% else %}
                    disabled
                  {% endif %}
                >
                  {%- if product.available -%}
                    Add to Cart
                  {%- else -%}
                    Sold Out
                  {%- endif -%}
                </button>
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Collection Page",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 4,
      "max": 24,
      "step": 4,
      "default": 12,
      "label": "Products per page"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "options": [
        {
          "value": "2",
          "label": "2 columns"
        },
        {
          "value": "3",
          "label": "3 columns"
        },
        {
          "value": "4",
          "label": "4 columns"
        }
      ],
      "default": "3",
      "label": "Number of columns on desktop"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "Enable filtering"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "Enable sorting"
    }
  ]
}
{% endschema %}

<script>
function addToCart(variantId, quantity) {
  fetch('/cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      items: [{
        id: variantId,
        quantity: quantity
      }]
    })
  })
  .then(response => response.json())
  .then(data => {
    // Update cart count
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        document.querySelector('[data-cart-count]').textContent = cart.item_count;
      });
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}
</script> 